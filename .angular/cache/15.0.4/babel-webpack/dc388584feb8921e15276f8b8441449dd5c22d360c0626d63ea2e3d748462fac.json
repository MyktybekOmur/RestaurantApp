{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./login.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./login.page.scss?ngResource\";\nimport { UsersService } from './../../services/users/users.service';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from 'src/app/services/data/data.service';\nimport { LoadingController, ToastController } from '@ionic/angular';\nlet LoginPage = class LoginPage {\n  constructor(router, usersApi, localData, loadingController, toastController) {\n    this.router = router;\n    this.usersApi = usersApi;\n    this.localData = localData;\n    this.loadingController = loadingController;\n    this.toastController = toastController;\n    this.isLogin = true;\n    this.form = {\n      email: '',\n      name: '',\n      storeName: '',\n      storeAdress: '',\n      number: '',\n      password: '',\n      role: null,\n      image: ''\n    };\n    this.loginForm = {\n      number: '',\n      password: ''\n    };\n  }\n  ngOnInit() {}\n  login(item) {\n    this.isLogin = item;\n  }\n  onSubmit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const loading = yield this.loadingController.create();\n      yield loading.present();\n      this.usersApi.login(this.loginForm).subscribe(res => {\n        console.log(res);\n        if (res.length > 0) {\n          this.localData.addData(res);\n          this.router.navigate(['/home']);\n        } else {\n          this.presentToast('top');\n        }\n      });\n      loading.dismiss();\n    });\n  }\n  onSubmitReg() {}\n  presentToast(position) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const toast = yield this.toastController.create({\n        message: 'Error!',\n        color: 'danger',\n        duration: 1500,\n        position: position\n      });\n      yield toast.present();\n    });\n  }\n};\nLoginPage.ctorParameters = () => [{\n  type: Router\n}, {\n  type: UsersService\n}, {\n  type: DataService\n}, {\n  type: LoadingController\n}, {\n  type: ToastController\n}];\nLoginPage = __decorate([Component({\n  selector: 'app-login',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginPage);\nexport { LoginPage };","map":{"version":3,"mappings":";;;AAAA,SAASA,YAAY,QAAQ,sCAAsC;AACnE,SAASC,SAAS,QAAgB,eAAe;AACjD,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,WAAW,QAAQ,oCAAoC;AAChE,SAASC,iBAAiB,EAAEC,eAAe,QAAQ,gBAAgB;AAO5D,IAAMC,SAAS,GAAf,MAAMA,SAAS;EAgBpBC,YAAoBC,MAAa,EAASC,QAAqB,EACnDC,SAAsB,EACtBC,iBAAoC,EACpCC,eAAgC;IAHxB,WAAM,GAANJ,MAAM;IAAgB,aAAQ,GAARC,QAAQ;IACtC,cAAS,GAATC,SAAS;IACT,sBAAiB,GAAjBC,iBAAiB;IACjB,oBAAe,GAAfC,eAAe;IAlB3B,YAAO,GAAG,IAAI;IACd,SAAI,GAAQ;MACVC,KAAK,EAAC,EAAE;MACRC,IAAI,EAAC,EAAE;MACPC,SAAS,EAAC,EAAE;MACZC,WAAW,EAAC,EAAE;MACdC,MAAM,EAAC,EAAE;MACTC,QAAQ,EAAC,EAAE;MACXC,IAAI,EAAC,IAAI;MACTC,KAAK,EAAC;KACP;IACD,cAAS,GAAQ;MACfH,MAAM,EAAC,EAAE;MACTC,QAAQ,EAAC;KACV;EAI+C;EAEhDG,QAAQ,IACR;EACAC,KAAK,CAACC,IAAY;IAChB,IAAI,CAACC,OAAO,GAAGD,IAAI;EACrB;EACME,QAAQ;;MACZ,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACf,iBAAiB,CAACgB,MAAM,EAAE;MACrD,MAAMD,OAAO,CAACE,OAAO,EAAE;MACvB,IAAI,CAACnB,QAAQ,CAACa,KAAK,CAAC,IAAI,CAACO,SAAS,CAAC,CAACC,SAAS,CAAEC,GAAG,IAAG;QACnDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAGA,GAAG,CAACG,MAAM,GAAC,CAAC,EAAC;UACd,IAAI,CAACxB,SAAS,CAACyB,OAAO,CAACJ,GAAG,CAAC;UAC3B,IAAI,CAACvB,MAAM,CAAC4B,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;SAChC,MAAI;UACH,IAAI,CAACC,YAAY,CAAC,KAAK,CAAC;;MAG5B,CAAC,CAAC;MACFX,OAAO,CAACY,OAAO,EAAE;IAEnB,CAAC;;EACDC,WAAW,IAEX;EACMF,YAAY,CAACG,QAAqC;;MACtD,MAAMC,KAAK,GAAG,MAAM,IAAI,CAAC7B,eAAe,CAACe,MAAM,CAAC;QAC9Ce,OAAO,EAAE,QAAQ;QACjBC,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAE,IAAI;QACdJ,QAAQ,EAAEA;OACX,CAAC;MAEF,MAAMC,KAAK,CAACb,OAAO,EAAE;IACvB,CAAC;;;;;;;;;;;;;;AAtDUtB,SAAS,eALrBL,SAAS,CAAC;EACT4C,QAAQ,EAAE,WAAW;EACrBC,8BAAgC;;CAEjC,CAAC,GACWxC,SAAS;SAATA,SAAS","names":["UsersService","Component","Router","DataService","LoadingController","ToastController","LoginPage","constructor","router","usersApi","localData","loadingController","toastController","email","name","storeName","storeAdress","number","password","role","image","ngOnInit","login","item","isLogin","onSubmit","loading","create","present","loginForm","subscribe","res","console","log","length","addData","navigate","presentToast","dismiss","onSubmitReg","position","toast","message","color","duration","selector","template"],"sourceRoot":"","sources":["/Users/myktybekomurbekov/Documents/projects/NodeJS/RestaurantApp/src/app/screens/login/login.page.ts"],"sourcesContent":["import { UsersService } from './../../services/users/users.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from 'src/app/services/data/data.service';\nimport { LoadingController, ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  isLogin = true;\n  form: any = {\n    email:'',\n    name:'',\n    storeName:'',\n    storeAdress:'',\n    number:'',\n    password:'',\n    role:null,\n    image:''\n  }\n  loginForm: any = {\n    number:'',\n    password:''\n  }\n  constructor(private router:Router,private usersApi:UsersService,\n      private localData: DataService,  \n      private loadingController: LoadingController,\n      private toastController: ToastController) { }\n\n  ngOnInit() {\n  }\n  login(item:boolean){\n    this.isLogin = item;\n  }\n  async onSubmit(){\n    const loading = await this.loadingController.create();\n    await loading.present();\n    this.usersApi.login(this.loginForm).subscribe((res)=>{\n      console.log(res)\n      if(res.length>0){\n        this.localData.addData(res);\n        this.router.navigate(['/home'])\n      }else{\n        this.presentToast('top')\n      }\n   \n    })\n    loading.dismiss();\n    \n  }\n  onSubmitReg(){\n\n  }\n  async presentToast(position: 'top' | 'middle' | 'bottom') {\n    const toast = await this.toastController.create({\n      message: 'Error!',\n      color: 'danger',\n      duration: 1500,\n      position: position\n    });\n\n    await toast.present();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}